version: '3.7'

services:
  nginx:
    build:
      context: docker/nginx
    container_name: nginx
    ports:
      - "127.0.0.1:8080:80"
    volumes:
      - ./src:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - db
      - redis
      - memcached
      - meilisearch
      - mailpit
      - rabbitmq
      - mongo
      - mongo-express
    networks:
      - backend

angie:
    build:
    # docker.angie.software/angie:latest
      context: docker/angie
    container_name: angie
    ports:
      - "127.0.0.1:8080:80"
    volumes:
      - ./src:/var/www
      - ./docker/angie/default.conf:/etc/angie/http.d/default.conf
    depends_on:
      - php
      - db
    networks:
      - backend 
      
  db:
    build:
      context: docker/mysql
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "127.0.0.1:3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: db
    volumes:
      - ./data/mysql:/var/lib/mysql
    networks:
      - backend

  php:
    build:
      context: docker/php-fpm
    container_name: php
    volumes:
      - ./src:/var/www
    ports:
      - "127.0.0.1:9000:9000"
    networks:
      - backend
      
  redis:
    image: redis:alpine
    container_name: redis
    ports:
        - "127.0.0.1:6379:6379"
    volumes:
        - ./data/redis:/data
    networks:
        - backend
    healthcheck:
        test:
            - CMD
            - redis-cli
            - ping
        retries: 3
        timeout: 5s

  memcached:
    image: memcached:alpine
    container_name: memcached
    ports:
        - "127.0.0.1:11211:11211"
    networks:
        - backend

  meilisearch:
    image: getmeili/meilisearch:latest
    container_name: meilisearch
    ports:
        - "127.0.0.1:7700:7700"
    environment:
        MEILI_NO_ANALYTICS: ${MEILISEARCH_NO_ANALYTICS:-false}
    volumes:
        - ./data/meli_data:/meili_data
    networks:
        - backend
    healthcheck:
        test:
            - CMD
            - wget
            - '--no-verbose'
            - '--spider'
            - 'http://localhost:7700/health'
        retries: 3
        timeout: 5s

  mailpit:
    image: axllent/mailpit
    container_name: mailpit
    restart: always
    ports:
        - "127.0.0.1:8025:8025"
        - "127.0.0.1:1025:1025"
    environment:
        MP_MAX_MESSAGES: 5000
        MP_DATA_FILE: /data/mailpit.db
        MP_SMTP_AUTH_ACCEPT_ANY: 1
        MP_SMTP_AUTH_ALLOW_INSECURE: 1
        TZ: Europe/Moscow    
    volumes:
        - /data/mailpit-data:/data
    networks:
        - backend

 rabbitmq:
    image: rabbitmq:3.13.3-management-alpine
    restart: always
    environment:
        RABBITMQ_DEFAULT_USER: guest
        RABBITMQ_DEFAULT_PASS: guest
    ports:
        - "127.0.0.1:5673:5672"
        - "127.0.0.1:15673:15672"
    networks:
        - backend
        
 mongo:
    image: mongo
    #command: --serviceExecutor adaptive
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
        - backend  

 mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 127.0.0.1:8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false       
    networks:
        - backend  
 #es01:        
 elacticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.1
    container_name: es01
    environment:
      - node.name=es01
      #- cluster.name=es-docker-cluster
      #- discovery.seed_hosts=es02,es03
      #- cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./data/es01:/usr/share/elasticsearch/data
    ports:
      - 127.0.0.1:9200:9200       
        
networks:
  backend:
    driver: bridge
      
